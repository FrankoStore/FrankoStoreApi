# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AuthenticationInput {
  login: String!
  password: String!
}

type AuthenticationPayload {
  accessToken: String!
  refreshToken: String!
}

input CreateFileInput {
  file: String!
  fileExtension: String!
  fileName: String!
  fileSize: Float!
}

input CreateProductCategoryInput {
  endDateRange: DateTime
  name: String!
  startDateRange: DateTime
}

input CreateProductInput {
  categories: [CreateProductCategoryInput!]!
  description: String!
  height: Float!
  images: [CreateFileInput!]!
  length: Float!
  name: String!
  retailPrice: Float!
  size: SizeEnum!
  width: Float!
}

input CreateUserInput {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  phone: String!
  roles: [RoleEnum!]!
  username: String!
  website: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type DiscountType {
  name: String!
  percentage: Float!
}

type File {
  fileExtension: String!
  fileName: String!
  id: Int!
  path: String!
  size: Float!
  updatedAt: DateTime!
}

input FindOptionsProductCategoryInput {
  endDateRange: DateTime
  id: Float
  name: String
  startDateRange: DateTime
}

input FindOptionsProductInput {
  amount: Float
  categories: FindOptionsProductCategoryInput
  description: String
  height: Float
  id: Float
  length: Float
  name: String
  retailPrice: Float
  size: SizeEnum
  width: Float
}

type Mutation {
  createProduct(product: CreateProductInput!): Product!
  login(authenticationInput: AuthenticationInput!): AuthenticationPayload!
  refresh: AuthenticationPayload!
  register(user: CreateUserInput!): AuthenticationPayload!
  updateMyUser(user: UpdateUserInput!): User!
  updateProduct(id: Float!, product: UpdateProductInput!): Product!
}

type Product {
  amount: Float!
  categories: [ProductCategory!]!
  description: String!
  height: Float!
  images: [File!]!
  length: Float!
  name: String!
  retailPrice: Float!
  size: SizeEnum!
  width: Float!
}

type ProductCategory {
  endDateRange: DateTime
  name: String!
  startDateRange: DateTime
}

type Query {
  getMysUser: User!
  getProducts(findOptions: FindOptionsProductInput): [Product!]!
}

type Role {
  name: String!
}

enum RoleEnum {
  Admin
  Customer
  Manager
}

enum SizeEnum {
  L
  M
  S
  XL
  XXL
}

input UpdateProductInput {
  amount: Float!
  categories: [CreateProductCategoryInput!]
  description: String
  height: Float
  images: [CreateFileInput!]
  length: Float
  name: String
  retailPrice: Float
  size: SizeEnum
  width: Float
}

input UpdateUserInput {
  firstName: String
  lastName: String
  phone: String
  username: String
  website: String
}

type User {
  dicountType: DiscountType
  email: String!
  firstName: String!
  id: Int!
  lastName: String!
  phone: String!
  roles: [Role]
  username: String!
  website: String
}